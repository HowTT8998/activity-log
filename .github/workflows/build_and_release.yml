name: Build and Release

on:
  workflow_dispatch: 
    inputs:
      tag:
        description: 'Tag name'     
        required: true
      note:
        description: 'Release note'
        
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Build
        run: |
          npm i -g @vercel/ncc
          npm i @actions/github
          npm run build
      - name: Commit
        run: |
          git config --global user.name 'HowTT8998'
          git config --global user.email 'ht.howardtan@gmail.com'
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -am "dist build"
            git push || echo "No changes to push."
          else
            echo "No changes to commit."

  test:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: Test index.js
        env:
          INPUT_GITHUB_USERNAME: "HowTT8998"
          INPUT_GITHUB_TOKEN: ${{ secrets.JIRA_ACTION_SECRETS }}
          INPUT_TARGET_REPOS: '[howtt8998/activity-log]'
          INPUT_OUTPUT_STYLE: MARKDOWN
          INPUT_IGNORE_EVENTS: '[]'
          INPUT_README_PATH: README.md
          INPUT_COMMIT_MESSAGE: Update README.md
          INPUT_EVENT_LIMIT: '100'
        run: node ./dist/index.js

  release:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Pull latest
        run: |
          git config --global user.name 'HowTT8998'
          git config --global user.email 'ht.howardtan@gmail.com'
          git pull
      - name: Tag it
        run: |
          git tag -a ${{ github.event.inputs.tag }} -m "更新標籤" HEAD
          git push --tags -f
      - name: Release
        uses: actions/create-release@v1 # Updated action version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag }}  # Correct input reference
          release_name: Release ${{ github.event.inputs.tag }}
          body: ${{ github.event.inputs.note }}  # Correct input reference
          draft: false
          prerelease: false
